{"version":3,"sources":["../../app-es6/dao/NegociacaoDao.js"],"names":["Negociacao","NegociacaoDao","connection","_connection","_store","negociacao","Promise","resolve","reject","request","transaction","objectStore","add","onsuccess","onerror","console","log","e","error","cursor","openCursor","negociacoes","atual","target","result","dado","value","push","_data","_quantidade","_valor","continue","clear"],"mappings":";;;;;;;;;;;;;;;AAASA,gB,qBAAAA,U;;;;;;;;;;;;;;;;;;;;;+BAEIC,a;AAEX,+BAAYC,UAAZ,EAAwB;AAAA;;AAEtB,eAAKC,WAAL,GAAmBD,UAAnB;AACA,eAAKE,MAAL,GAAc,aAAd;AAED;;;;mCAEQC,U,EAAY;AAAA;;AAEnB,mBAAO,IAAIC,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;AACpC,kBAAIC,UAAU,MAAKN,WAAL,CACXO,WADW,CACC,CAAC,MAAKN,MAAN,CADD,EACgB,WADhB,EAEXO,WAFW,CAEC,MAAKP,MAFN,EAGXQ,GAHW,CAGPP,UAHO,CAAd;;AAKEI,sBAAQI,SAAR,GAAoB,aAAK;AACvBN;AACD,eAFD;;AAIAE,sBAAQK,OAAR,GAAkB,aAAK;AACrBC,wBAAQC,GAAR,CAAYC,EAAEP,WAAF,CAAcQ,KAA1B;AACAV,uBAAO,yCAAP;AACD,eAHD;AAIL,aAdM,CAAP;AAeD;;;uCAEY;AAAA;;AACX,mBAAO,IAAIF,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;;AAEtC,kBAAIW,SAAS,OAAKhB,WAAL,CACRO,WADQ,CACI,CAAC,OAAKN,MAAN,CADJ,EACmB,WADnB,EAERO,WAFQ,CAEI,OAAKP,MAFT,EAGRgB,UAHQ,EAAb;;AAKA,kBAAIC,cAAc,EAAlB;;AAEAF,qBAAON,SAAP,GAAmB,aAAK;AACtB,oBAAIS,QAAQL,EAAEM,MAAF,CAASC,MAArB,CADsB,CACO;;AAE7B,oBAAGF,KAAH,EAAU;AACR,sBAAIG,OAAOH,MAAMI,KAAjB,CADQ,CACgB;;AAExBL,8BAAYM,IAAZ,CAAiB,IAAI3B,UAAJ,CAAeyB,KAAKG,KAApB,EAA2BH,KAAKI,WAAhC,EAA6CJ,KAAKK,MAAlD,CAAjB;;AAEAR,wBAAMS,QAAN;AACD,iBAND,MAMO;AACLxB,0BAAQc,WAAR;AACD;AACF,eAZD;;AAcAF,qBAAOL,OAAP,GAAiB,aAAK;AACpBC,wBAAQC,GAAR,CAAYC,EAAEM,MAAF,CAASL,KAArB;AACAV,uBAAO,wCAAP;AACD,eAHD;AAKD,aA5BM,CAAP;AA6BD;;;uCAEY;AAAA;;AACX,mBAAO,IAAIF,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;;AAEtC,kBAAIC,UAAU,OAAKN,WAAL,CACTO,WADS,CACG,CAAC,OAAKN,MAAN,CADH,EACkB,WADlB,EAETO,WAFS,CAEG,OAAKP,MAFR,EAGT4B,KAHS,EAAd;;AAKAvB,sBAAQI,SAAR,GAAoB;AAAA,uBAAKN,QAAQ,kCAAR,CAAL;AAAA,eAApB;;AAEAE,sBAAQK,OAAR,GAAkB,aAAK;AACnBC,wBAAQC,GAAR,CAAYC,EAAEM,MAAF,CAASL,KAArB;AACAV,uBAAO,wCAAP;AACH,eAHD;AAID,aAbM,CAAP;AAcD","file":"NegociacaoDao.js","sourcesContent":["import { Negociacao } from \"../models/Negociacao\";\n\nexport class NegociacaoDao {\n\n  constructor(connection) {\n\n    this._connection = connection;\n    this._store = 'negociacoes';\n    \n  }\n\n  adiciona(negociacao) {\n\n    return new Promise((resolve, reject) => {\n        let request = this._connection\n          .transaction([this._store], 'readwrite') \n          .objectStore(this._store)\n          .add(negociacao);\n        \n          request.onsuccess = e => {\n            resolve();\n          };\n\n          request.onerror = e => {\n            console.log(e.transaction.error);\n            reject('Não foi possivel adicionar a negociação');\n          }\n    });\n  }\n\n  listaTodos() {\n    return new Promise((resolve, reject) => {\n\n      let cursor = this._connection\n          .transaction([this._store], 'readwrite') \n          .objectStore(this._store)\n          .openCursor();\n      \n      let negociacoes = [];\n\n      cursor.onsuccess = e => {\n        let atual = e.target.result; //ponteiro\n\n        if(atual) {\n          let dado = atual.value; // pega as propriedades dentro do ponteiro\n\n          negociacoes.push(new Negociacao(dado._data, dado._quantidade, dado._valor));\n\n          atual.continue();\n        } else {\n          resolve(negociacoes);\n        }\n      };\n\n      cursor.onerror = e => {\n        console.log(e.target.error);\n        reject('Não foi possível listar as negociações');\n      };\n\n    });\n  }\n\n  apagaTodos() {\n    return new Promise((resolve, reject) => {\n\n      let request = this._connection\n          .transaction([this._store], 'readwrite') \n          .objectStore(this._store)\n          .clear(); \n\n      request.onsuccess = e => resolve('Negociações apagadas com sucesso');\n\n      request.onerror = e => { \n          console.log(e.target.error);\n          reject('Não foi possível apagar as negociações');\n      };\n    });\n  }\n}"]}