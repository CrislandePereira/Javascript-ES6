{"version":3,"sources":["../../app-es6/services/NegociacaoService.js"],"names":["HttpService","ConnectionFactory","NegociacaoDao","Negociacao","NegociacaoService","_http","get","then","console","log","negociacoes","map","Date","objeto","data","quantidade","valor","catch","erro","Error","Promise","all","obterNegociacoesDaSemana","obterNegociacoesAnterior","obterNegociacoesRetrasada","periodos","reduce","dados","periodo","concat","negociacao","getConnection","connection","dao","adiciona","listaTodos","apagaTodos","listaAtual","obterNegociacoes","filter","some","JSON","stringify","negociacaoExistente"],"mappings":"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","file":"NegociacaoService.js","sourcesContent":["import { HttpService } from \"./HttpService\";\nimport { ConnectionFactory } from \"./ConnectionFactory\";\nimport { NegociacaoDao } from \"../dao/NegociacaoDao\";\nimport { Negociacao } from \"../models/Negociacao\";\n\nexport class NegociacaoService {\n\n  constructor() {\n      this._http = new HttpService();\n  }\n\n  obterNegociacoesDaSemana() {\n      return this._http\n          .get('negociacoes/semana')\n          .then(negociacoes => {\n              console.log(negociacoes);\n              return negociacoes.map(objeto => new Negociacao(new Date(objeto.data), objeto.quantidade, objeto.valor));\n          })\n          .catch(erro => {\n              console.log(erro);\n              throw new Error('Não foi possível obter as negociações da semana');\n          });  \n  }\n\n  obterNegociacoesAnterior() {\n      return this._http\n          .get('negociacoes/anterior')\n          .then(negociacoes => {\n              console.log(negociacoes);\n              return negociacoes.map(objeto => new Negociacao(new Date(objeto.data), objeto.quantidade, objeto.valor));\n          })\n          .catch(erro => {\n              console.log(erro);\n              throw new Error('Não foi possível obter as negociações da semana anterior');\n          });  \n  }\n\n  obterNegociacoesRetrasada() {\n      return this._http\n          .get('negociacoes/retrasada')\n          .then(negociacoes => {\n              console.log(negociacoes);\n              return negociacoes.map(objeto => new Negociacao(new Date(objeto.data), objeto.quantidade, objeto.valor));\n          })\n          .catch(erro => {\n              console.log(erro);\n              throw new Error('Não foi possível obter as negociações da semana retrasada');\n          });  \n  }\n\n  obterNegociacoes() {\n      return Promise.all([\n          this.obterNegociacoesDaSemana(),\n          this.obterNegociacoesAnterior(),\n          this.obterNegociacoesRetrasada()\n      ]).then(periodos => {\n          let negociacoes = periodos\n              .reduce((dados, periodo) => dados.concat(periodo), []);\n          return negociacoes;\n      }).catch(erro => {\n          throw new Error(erro);\n      });\n  } \n\n  cadastra(negociacao) {\n    \n    return ConnectionFactory // conexao com o DB\n        .getConnection()\n        .then(connection => new NegociacaoDao(connection))\n        .then(dao => dao.adiciona(negociacao))\n        .then(() => 'Negociação adicionada com sucesso')\n        .catch(erro => {\n            console.log(erro);\n            throw new Error('Não foi possível adicionar a negociação')\n        });\n  }\n\n  lista() {\n    return ConnectionFactory // conexao com o DB\n        .getConnection()\n        .then(connection => new NegociacaoDao(connection))\n        .then(dao => dao.listaTodos())\n        .catch(erro => {\n            console.log(erro);\n            throw new Error('Não foi possível obter as negociações');\n        })\n  }\n\n  apaga() {\n    \n    return ConnectionFactory\n        .getConnection()\n        .then(connection => new NegociacaoDao(connection))\n        .then(dao => dao.apagaTodos())\n        .then(() => 'Negociações apagadas com sucesso')\n        .catch(erro => {\n            console.log(erro);\n            throw new Error('Não foi possível apagar as negociações')\n        })      \n    }\n\n    importa(listaAtual) {\n        return this.obterNegociacoes()\n            .then(negociacoes => \n                negociacoes.filter(negociacao => \n                    !listaAtual.some(negociacaoExistente => \n                        JSON.stringify(negociacao) == JSON.stringify(negociacaoExistente)))\n            )\n            .catch(erro => {\n                console.log(erro);\n                throw new Error('Não foi possível buscar negociações para importar');\n            }); \n        }\n}"]}